import React, { useContext } from 'react';
import { Navigate, useLocation } from 'react-router-dom';
import { AuthContext } from '../../context/AuthContext';
import Loader from '../Common/Loader';

const ProtectedRoute = ({ children, requiredPermission = null, requiredRole = null }) => {
  const { isAuthenticated, loading, user, checkPermission, hasRole } = useContext(AuthContext);
  const location = useLocation();

  // Show loader while checking authentication status
  if (loading) {
    return (
      <div className="protected-route-loading">
        <Loader text="–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..." />
      </div>
    );
  }

  // Redirect to login if not authenticated
  if (!isAuthenticated) {
    return <Navigate to="/login" state={{ from: location.pathname }} replace />;
  }

  // Check permission if specified
  if (requiredPermission && !checkPermission(requiredPermission)) {
    return (
      <div className="access-denied">
        <div className="access-denied-content">
          <h2>üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
          <p>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã.</p>
          <p><strong>–¢—Ä–µ–±—É–µ–º–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ:</strong> <code>{requiredPermission}</code></p>
          <p><strong>–í–∞—à–∞ —Ä–æ–ª—å:</strong> <code>{user?.role || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞'}</code></p>
          <p><strong>–í–∞—à–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è:</strong> <code>{user?.permissions?.join(', ') || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã'}</code></p>
          <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.</p>
          <div className="mt-4">
            <button 
              className="btn btn-primary"
              onClick={() => window.history.back()}
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
            </button>
          </div>
        </div>
      </div>
    );
  }

  // Check role if specified
  if (requiredRole && !hasRole(requiredRole)) {
    return (
      <div className="access-denied">
        <div className="access-denied-content">
          <h2>üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
          <p>–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–æ–ª—å <code>{requiredRole}</code>.</p>
          <p>–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ä–æ–ª—å: <code>{user?.role || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞'}</code></p>
          <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∞—à–µ–π —Ä–æ–ª–∏.</p>
          <div className="mt-4">
            <button 
              className="btn btn-primary"
              onClick={() => window.history.back()}
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
            </button>
          </div>
        </div>
      </div>
    );
  }

  // User is authenticated and has required permission/role
  return children;
};

export default ProtectedRoute;