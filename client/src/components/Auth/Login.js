import React, { useState, useContext } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { AuthContext } from '../../context/AuthContext';
import ErrorMessage from '../Common/ErrorMessage';
import Loader from '../Common/Loader';

const Login = () => {
  const [formData, setFormData] = useState({
    username: '',
    password: ''
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [showPassword, setShowPassword] = useState(false);

  const { login } = useContext(AuthContext);
  const navigate = useNavigate();

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–≤–æ–¥–∞
    if (error) setError(null);
  };

  const validateForm = () => {
    if (!formData.username) {
      setError('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return false;
    }
    if (!formData.password) {
      setError('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å');
      return false;
    }
    return true;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!validateForm()) return;

    setLoading(true);
    setError(null);

    try {
      await login(formData.username, formData.password);
      navigate('/');
    } catch (err) {
      console.error('Login error:', err);
      setError(err.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setLoading(false);
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      handleSubmit(e);
    }
  };

  return (
    <div className="login-page">
      <div className="login-container">
        <div className="login-card">
          <div className="login-header">
            <div className="logo">
              <span className="logo-icon">‚úàÔ∏è</span>
              <h1>AirlineMS</h1>
            </div>
            <p className="login-subtitle">–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤–∏–∞–ø–µ—Ä–µ–≤–æ–∑–∫–∞–º–∏</p>
          </div>

          <form onSubmit={handleSubmit} className="login-form">
            <div className="form-group">
              <label htmlFor="username">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
              <div className="input-group">
                <span className="input-icon">üë§</span>
                <input
                  id="username"
                  type="text"
                  name="username"
                  className="form-control"
                  value={formData.username}
                  onChange={handleChange}
                  onKeyPress={handleKeyPress}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                  autoComplete="username"
                  disabled={loading}
                />
              </div>
            </div>

            <div className="form-group">
              <label htmlFor="password">–ü–∞—Ä–æ–ª—å</label>
              <div className="input-group">
                <span className="input-icon">üîí</span>
                <input
                  id="password"
                  type={showPassword ? 'text' : 'password'}
                  name="password"
                  className="form-control"
                  value={formData.password}
                  onChange={handleChange}
                  onKeyPress={handleKeyPress}
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                  autoComplete="current-password"
                  disabled={loading}
                />
                <button
                  type="button"
                  className="password-toggle"
                  onClick={() => setShowPassword(!showPassword)}
                  aria-label={showPassword ? '–°–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª—å' : '–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å'}
                  disabled={loading}
                >
                  {showPassword ? 'üëÅÔ∏è' : 'üëÅÔ∏è‚Äçüó®Ô∏è'}
                </button>
              </div>
            </div>

            {error && <ErrorMessage message={error} type="danger" />}

            <button
              type="submit"
              className="btn btn-primary login-btn"
              disabled={loading || !formData.username || !formData.password}
            >
              {loading ? (
                <>
                  <Loader />
                  –í—Ö–æ–¥...
                </>
              ) : (
                'üö™ –í–æ–π—Ç–∏'
              )}
            </button>
          </form>

          <div className="login-footer">
            <p>
              –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? <Link to="/register">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</Link>
            </p>
            <p className="version-info">
              –í–µ—Ä—Å–∏—è 1.0.0 | ¬© 2025
            </p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Login;